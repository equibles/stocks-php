<?php
/**
 * PerformanceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  EquiblesStocks
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Stocks
 *
 * <h3>Rate limits</h3>                     Free subscriptions are subject to daily limits. To know how much requests you have left look at the following headers in the response.<br />                     1. <strong>x-ratelimit-limit</strong> - The total number of requests that you are allowed to make in a given period (hour/day)<br />                     2. <strong>x-ratelimit-remaining</strong> - The number of remaining requests that you can perform in the current period.<br />                     3. <strong>x-ratelimit-reset</strong> - The number of seconds until the current period resets.<br />                     <br />                     <br />                     You don't have an API key? <a href=\"https://www.equibles.com/api/pricing\" target=\"_blank\">Get one for free here.</a>
 *
 * OpenAPI spec version: v1
 * Contact: contact@equibles.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.34
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace EquiblesStocks;

/**
 * PerformanceTest Class Doc Comment
 *
 * @category    Class
 * @description Performance
 * @package     EquiblesStocks
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PerformanceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Performance"
     */
    public function testPerformance()
    {
    }

    /**
     * Test attribute "lastUpdate"
     */
    public function testPropertyLastUpdate()
    {
    }

    /**
     * Test attribute "oneDay"
     */
    public function testPropertyOneDay()
    {
    }

    /**
     * Test attribute "oneWeek"
     */
    public function testPropertyOneWeek()
    {
    }

    /**
     * Test attribute "twoWeeks"
     */
    public function testPropertyTwoWeeks()
    {
    }

    /**
     * Test attribute "oneMonth"
     */
    public function testPropertyOneMonth()
    {
    }

    /**
     * Test attribute "threeMonths"
     */
    public function testPropertyThreeMonths()
    {
    }

    /**
     * Test attribute "sixMonths"
     */
    public function testPropertySixMonths()
    {
    }

    /**
     * Test attribute "yearToDate"
     */
    public function testPropertyYearToDate()
    {
    }

    /**
     * Test attribute "oneYear"
     */
    public function testPropertyOneYear()
    {
    }

    /**
     * Test attribute "twoYears"
     */
    public function testPropertyTwoYears()
    {
    }

    /**
     * Test attribute "twoYearsAnnualized"
     */
    public function testPropertyTwoYearsAnnualized()
    {
    }

    /**
     * Test attribute "threeYears"
     */
    public function testPropertyThreeYears()
    {
    }

    /**
     * Test attribute "threeYearsAnnualized"
     */
    public function testPropertyThreeYearsAnnualized()
    {
    }

    /**
     * Test attribute "fiveYears"
     */
    public function testPropertyFiveYears()
    {
    }

    /**
     * Test attribute "fiveYearsAnnualized"
     */
    public function testPropertyFiveYearsAnnualized()
    {
    }

    /**
     * Test attribute "tenYears"
     */
    public function testPropertyTenYears()
    {
    }

    /**
     * Test attribute "tenYearsAnnualized"
     */
    public function testPropertyTenYearsAnnualized()
    {
    }

    /**
     * Test attribute "twentyYears"
     */
    public function testPropertyTwentyYears()
    {
    }

    /**
     * Test attribute "twentyYearsAnnualized"
     */
    public function testPropertyTwentyYearsAnnualized()
    {
    }
}
